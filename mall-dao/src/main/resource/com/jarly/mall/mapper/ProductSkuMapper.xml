<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jarly.mall.mapper.ProductSkuMapper">
  <resultMap id="BaseResultMap" type="com.jarly.mall.model.ProductSku">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="sale_props" jdbcType="VARCHAR" property="saleProps" />
    <result column="vids" jdbcType="VARCHAR" property="vids" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="stock_memo" jdbcType="VARCHAR" property="stockMemo" />
    <result column="stockWarning" jdbcType="INTEGER" property="stockwarning" />
    <result column="sku" jdbcType="VARCHAR" property="sku" />
    <result column="allocated_stock" jdbcType="INTEGER" property="allocatedStock" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="deposit_price" jdbcType="DECIMAL" property="depositPrice" />
    <result column="deposit" jdbcType="DECIMAL" property="deposit" />
    <result column="earnest" jdbcType="DECIMAL" property="earnest" />
    <result column="is_list" jdbcType="BIT" property="isList" />
    <result column="is_recommend" jdbcType="BIT" property="isRecommend" />
    <result column="is_marketable" jdbcType="TINYINT" property="isMarketable" />
    <result column="is_new" jdbcType="BIT" property="isNew" />
    <result column="is_old" jdbcType="BIT" property="isOld" />
    <result column="is_sell" jdbcType="BIT" property="isSell" />
    <result column="is_lease" jdbcType="BIT" property="isLease" />
    <result column="is_book" jdbcType="BIT" property="isBook" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="originId" jdbcType="VARCHAR" property="originid" />
    <result column="rent_price" jdbcType="VARCHAR" property="rentPrice" />
    <result column="vip_price" jdbcType="DECIMAL" property="vipPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, product_id, sale_props, vids, image, stock, stock_memo, 
    stockWarning, sku, allocated_stock, sales, price, unit_price, deposit_price, deposit, 
    earnest, is_list, is_recommend, is_marketable, is_new, is_old, is_sell, is_lease, 
    is_book, weight, full_name, sn, originId, rent_price, vip_price
  </sql>
  <select id="selectByExample" parameterType="com.jarly.mall.model.ProductSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_sku
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product_sku
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jarly.mall.model.ProductSkuExample">
    delete from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jarly.mall.model.ProductSku">
    insert into product_sku (id, create_date, modify_date, 
      product_id, sale_props, vids, 
      image, stock, stock_memo, 
      stockWarning, sku, allocated_stock, 
      sales, price, unit_price, 
      deposit_price, deposit, earnest, 
      is_list, is_recommend, is_marketable, 
      is_new, is_old, is_sell, is_lease, 
      is_book, weight, full_name, 
      sn, originId, rent_price, 
      vip_price)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{productId,jdbcType=BIGINT}, #{saleProps,jdbcType=VARCHAR}, #{vids,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, #{stockMemo,jdbcType=VARCHAR}, 
      #{stockwarning,jdbcType=INTEGER}, #{sku,jdbcType=VARCHAR}, #{allocatedStock,jdbcType=INTEGER}, 
      #{sales,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{unitPrice,jdbcType=DECIMAL}, 
      #{depositPrice,jdbcType=DECIMAL}, #{deposit,jdbcType=DECIMAL}, #{earnest,jdbcType=DECIMAL}, 
      #{isList,jdbcType=BIT}, #{isRecommend,jdbcType=BIT}, #{isMarketable,jdbcType=TINYINT}, 
      #{isNew,jdbcType=BIT}, #{isOld,jdbcType=BIT}, #{isSell,jdbcType=BIT}, #{isLease,jdbcType=BIT}, 
      #{isBook,jdbcType=BIT}, #{weight,jdbcType=DECIMAL}, #{fullName,jdbcType=VARCHAR}, 
      #{sn,jdbcType=VARCHAR}, #{originid,jdbcType=VARCHAR}, #{rentPrice,jdbcType=VARCHAR}, 
      #{vipPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.jarly.mall.model.ProductSku">
    insert into product_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="saleProps != null">
        sale_props,
      </if>
      <if test="vids != null">
        vids,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="stockMemo != null">
        stock_memo,
      </if>
      <if test="stockwarning != null">
        stockWarning,
      </if>
      <if test="sku != null">
        sku,
      </if>
      <if test="allocatedStock != null">
        allocated_stock,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="depositPrice != null">
        deposit_price,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="earnest != null">
        earnest,
      </if>
      <if test="isList != null">
        is_list,
      </if>
      <if test="isRecommend != null">
        is_recommend,
      </if>
      <if test="isMarketable != null">
        is_marketable,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="isOld != null">
        is_old,
      </if>
      <if test="isSell != null">
        is_sell,
      </if>
      <if test="isLease != null">
        is_lease,
      </if>
      <if test="isBook != null">
        is_book,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="originid != null">
        originId,
      </if>
      <if test="rentPrice != null">
        rent_price,
      </if>
      <if test="vipPrice != null">
        vip_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="saleProps != null">
        #{saleProps,jdbcType=VARCHAR},
      </if>
      <if test="vids != null">
        #{vids,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="stockMemo != null">
        #{stockMemo,jdbcType=VARCHAR},
      </if>
      <if test="stockwarning != null">
        #{stockwarning,jdbcType=INTEGER},
      </if>
      <if test="sku != null">
        #{sku,jdbcType=VARCHAR},
      </if>
      <if test="allocatedStock != null">
        #{allocatedStock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="depositPrice != null">
        #{depositPrice,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="earnest != null">
        #{earnest,jdbcType=DECIMAL},
      </if>
      <if test="isList != null">
        #{isList,jdbcType=BIT},
      </if>
      <if test="isRecommend != null">
        #{isRecommend,jdbcType=BIT},
      </if>
      <if test="isMarketable != null">
        #{isMarketable,jdbcType=TINYINT},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=BIT},
      </if>
      <if test="isOld != null">
        #{isOld,jdbcType=BIT},
      </if>
      <if test="isSell != null">
        #{isSell,jdbcType=BIT},
      </if>
      <if test="isLease != null">
        #{isLease,jdbcType=BIT},
      </if>
      <if test="isBook != null">
        #{isBook,jdbcType=BIT},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="originid != null">
        #{originid,jdbcType=VARCHAR},
      </if>
      <if test="rentPrice != null">
        #{rentPrice,jdbcType=VARCHAR},
      </if>
      <if test="vipPrice != null">
        #{vipPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jarly.mall.model.ProductSkuExample" resultType="java.lang.Long">
    select count(*) from product_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_sku
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.saleProps != null">
        sale_props = #{record.saleProps,jdbcType=VARCHAR},
      </if>
      <if test="record.vids != null">
        vids = #{record.vids,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.stockMemo != null">
        stock_memo = #{record.stockMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.stockwarning != null">
        stockWarning = #{record.stockwarning,jdbcType=INTEGER},
      </if>
      <if test="record.sku != null">
        sku = #{record.sku,jdbcType=VARCHAR},
      </if>
      <if test="record.allocatedStock != null">
        allocated_stock = #{record.allocatedStock,jdbcType=INTEGER},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.depositPrice != null">
        deposit_price = #{record.depositPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.deposit != null">
        deposit = #{record.deposit,jdbcType=DECIMAL},
      </if>
      <if test="record.earnest != null">
        earnest = #{record.earnest,jdbcType=DECIMAL},
      </if>
      <if test="record.isList != null">
        is_list = #{record.isList,jdbcType=BIT},
      </if>
      <if test="record.isRecommend != null">
        is_recommend = #{record.isRecommend,jdbcType=BIT},
      </if>
      <if test="record.isMarketable != null">
        is_marketable = #{record.isMarketable,jdbcType=TINYINT},
      </if>
      <if test="record.isNew != null">
        is_new = #{record.isNew,jdbcType=BIT},
      </if>
      <if test="record.isOld != null">
        is_old = #{record.isOld,jdbcType=BIT},
      </if>
      <if test="record.isSell != null">
        is_sell = #{record.isSell,jdbcType=BIT},
      </if>
      <if test="record.isLease != null">
        is_lease = #{record.isLease,jdbcType=BIT},
      </if>
      <if test="record.isBook != null">
        is_book = #{record.isBook,jdbcType=BIT},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DECIMAL},
      </if>
      <if test="record.fullName != null">
        full_name = #{record.fullName,jdbcType=VARCHAR},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.originid != null">
        originId = #{record.originid,jdbcType=VARCHAR},
      </if>
      <if test="record.rentPrice != null">
        rent_price = #{record.rentPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.vipPrice != null">
        vip_price = #{record.vipPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_sku
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      product_id = #{record.productId,jdbcType=BIGINT},
      sale_props = #{record.saleProps,jdbcType=VARCHAR},
      vids = #{record.vids,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      stock_memo = #{record.stockMemo,jdbcType=VARCHAR},
      stockWarning = #{record.stockwarning,jdbcType=INTEGER},
      sku = #{record.sku,jdbcType=VARCHAR},
      allocated_stock = #{record.allocatedStock,jdbcType=INTEGER},
      sales = #{record.sales,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      deposit_price = #{record.depositPrice,jdbcType=DECIMAL},
      deposit = #{record.deposit,jdbcType=DECIMAL},
      earnest = #{record.earnest,jdbcType=DECIMAL},
      is_list = #{record.isList,jdbcType=BIT},
      is_recommend = #{record.isRecommend,jdbcType=BIT},
      is_marketable = #{record.isMarketable,jdbcType=TINYINT},
      is_new = #{record.isNew,jdbcType=BIT},
      is_old = #{record.isOld,jdbcType=BIT},
      is_sell = #{record.isSell,jdbcType=BIT},
      is_lease = #{record.isLease,jdbcType=BIT},
      is_book = #{record.isBook,jdbcType=BIT},
      weight = #{record.weight,jdbcType=DECIMAL},
      full_name = #{record.fullName,jdbcType=VARCHAR},
      sn = #{record.sn,jdbcType=VARCHAR},
      originId = #{record.originid,jdbcType=VARCHAR},
      rent_price = #{record.rentPrice,jdbcType=VARCHAR},
      vip_price = #{record.vipPrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jarly.mall.model.ProductSku">
    update product_sku
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="saleProps != null">
        sale_props = #{saleProps,jdbcType=VARCHAR},
      </if>
      <if test="vids != null">
        vids = #{vids,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="stockMemo != null">
        stock_memo = #{stockMemo,jdbcType=VARCHAR},
      </if>
      <if test="stockwarning != null">
        stockWarning = #{stockwarning,jdbcType=INTEGER},
      </if>
      <if test="sku != null">
        sku = #{sku,jdbcType=VARCHAR},
      </if>
      <if test="allocatedStock != null">
        allocated_stock = #{allocatedStock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="depositPrice != null">
        deposit_price = #{depositPrice,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="earnest != null">
        earnest = #{earnest,jdbcType=DECIMAL},
      </if>
      <if test="isList != null">
        is_list = #{isList,jdbcType=BIT},
      </if>
      <if test="isRecommend != null">
        is_recommend = #{isRecommend,jdbcType=BIT},
      </if>
      <if test="isMarketable != null">
        is_marketable = #{isMarketable,jdbcType=TINYINT},
      </if>
      <if test="isNew != null">
        is_new = #{isNew,jdbcType=BIT},
      </if>
      <if test="isOld != null">
        is_old = #{isOld,jdbcType=BIT},
      </if>
      <if test="isSell != null">
        is_sell = #{isSell,jdbcType=BIT},
      </if>
      <if test="isLease != null">
        is_lease = #{isLease,jdbcType=BIT},
      </if>
      <if test="isBook != null">
        is_book = #{isBook,jdbcType=BIT},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="originid != null">
        originId = #{originid,jdbcType=VARCHAR},
      </if>
      <if test="rentPrice != null">
        rent_price = #{rentPrice,jdbcType=VARCHAR},
      </if>
      <if test="vipPrice != null">
        vip_price = #{vipPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jarly.mall.model.ProductSku">
    update product_sku
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      product_id = #{productId,jdbcType=BIGINT},
      sale_props = #{saleProps,jdbcType=VARCHAR},
      vids = #{vids,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      stock_memo = #{stockMemo,jdbcType=VARCHAR},
      stockWarning = #{stockwarning,jdbcType=INTEGER},
      sku = #{sku,jdbcType=VARCHAR},
      allocated_stock = #{allocatedStock,jdbcType=INTEGER},
      sales = #{sales,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      deposit_price = #{depositPrice,jdbcType=DECIMAL},
      deposit = #{deposit,jdbcType=DECIMAL},
      earnest = #{earnest,jdbcType=DECIMAL},
      is_list = #{isList,jdbcType=BIT},
      is_recommend = #{isRecommend,jdbcType=BIT},
      is_marketable = #{isMarketable,jdbcType=TINYINT},
      is_new = #{isNew,jdbcType=BIT},
      is_old = #{isOld,jdbcType=BIT},
      is_sell = #{isSell,jdbcType=BIT},
      is_lease = #{isLease,jdbcType=BIT},
      is_book = #{isBook,jdbcType=BIT},
      weight = #{weight,jdbcType=DECIMAL},
      full_name = #{fullName,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      originId = #{originid,jdbcType=VARCHAR},
      rent_price = #{rentPrice,jdbcType=VARCHAR},
      vip_price = #{vipPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>