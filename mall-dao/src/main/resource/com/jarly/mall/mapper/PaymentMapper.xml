<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jarly.mall.mapper.PaymentMapper">
  <resultMap id="BaseResultMap" type="com.jarly.mall.model.Payment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="expire" jdbcType="TIMESTAMP" property="expire" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="method" jdbcType="INTEGER" property="method" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="payer" jdbcType="VARCHAR" property="payer" />
    <result column="payment_date" jdbcType="TIMESTAMP" property="paymentDate" />
    <result column="payment_method" jdbcType="VARCHAR" property="paymentMethod" />
    <result column="payment_plugin_id" jdbcType="VARCHAR" property="paymentPluginId" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="member" jdbcType="BIGINT" property="member" />
    <result column="orders" jdbcType="BIGINT" property="orders" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, account, amount, bank, expire, fee, memo, method, operator, 
    payer, payment_date, payment_method, payment_plugin_id, sn, status, type, member, 
    orders, trade_no
  </sql>
  <select id="selectByExample" parameterType="com.jarly.mall.model.PaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from payment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jarly.mall.model.PaymentExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jarly.mall.model.Payment">
    insert into payment (id, create_date, modify_date, 
      account, amount, bank, 
      expire, fee, memo, 
      method, operator, payer, 
      payment_date, payment_method, payment_plugin_id, 
      sn, status, type, member, 
      orders, trade_no)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{account,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{bank,jdbcType=VARCHAR}, 
      #{expire,jdbcType=TIMESTAMP}, #{fee,jdbcType=DECIMAL}, #{memo,jdbcType=VARCHAR}, 
      #{method,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, #{payer,jdbcType=VARCHAR}, 
      #{paymentDate,jdbcType=TIMESTAMP}, #{paymentMethod,jdbcType=VARCHAR}, #{paymentPluginId,jdbcType=VARCHAR}, 
      #{sn,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{member,jdbcType=BIGINT}, 
      #{orders,jdbcType=BIGINT}, #{tradeNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jarly.mall.model.Payment">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="expire != null">
        expire,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="payer != null">
        payer,
      </if>
      <if test="paymentDate != null">
        payment_date,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="paymentPluginId != null">
        payment_plugin_id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="member != null">
        member,
      </if>
      <if test="orders != null">
        orders,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="expire != null">
        #{expire,jdbcType=TIMESTAMP},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="payer != null">
        #{payer,jdbcType=VARCHAR},
      </if>
      <if test="paymentDate != null">
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="paymentPluginId != null">
        #{paymentPluginId,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="member != null">
        #{member,jdbcType=BIGINT},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=BIGINT},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jarly.mall.model.PaymentExample" resultType="java.lang.Long">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.bank != null">
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.expire != null">
        expire = #{record.expire,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=INTEGER},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.payer != null">
        payer = #{record.payer,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentDate != null">
        payment_date = #{record.paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentMethod != null">
        payment_method = #{record.paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentPluginId != null">
        payment_plugin_id = #{record.paymentPluginId,jdbcType=VARCHAR},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.member != null">
        member = #{record.member,jdbcType=BIGINT},
      </if>
      <if test="record.orders != null">
        orders = #{record.orders,jdbcType=BIGINT},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      account = #{record.account,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      bank = #{record.bank,jdbcType=VARCHAR},
      expire = #{record.expire,jdbcType=TIMESTAMP},
      fee = #{record.fee,jdbcType=DECIMAL},
      memo = #{record.memo,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=INTEGER},
      operator = #{record.operator,jdbcType=VARCHAR},
      payer = #{record.payer,jdbcType=VARCHAR},
      payment_date = #{record.paymentDate,jdbcType=TIMESTAMP},
      payment_method = #{record.paymentMethod,jdbcType=VARCHAR},
      payment_plugin_id = #{record.paymentPluginId,jdbcType=VARCHAR},
      sn = #{record.sn,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      member = #{record.member,jdbcType=BIGINT},
      orders = #{record.orders,jdbcType=BIGINT},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jarly.mall.model.Payment">
    update payment
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="expire != null">
        expire = #{expire,jdbcType=TIMESTAMP},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="payer != null">
        payer = #{payer,jdbcType=VARCHAR},
      </if>
      <if test="paymentDate != null">
        payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="paymentPluginId != null">
        payment_plugin_id = #{paymentPluginId,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="member != null">
        member = #{member,jdbcType=BIGINT},
      </if>
      <if test="orders != null">
        orders = #{orders,jdbcType=BIGINT},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jarly.mall.model.Payment">
    update payment
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      account = #{account,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      bank = #{bank,jdbcType=VARCHAR},
      expire = #{expire,jdbcType=TIMESTAMP},
      fee = #{fee,jdbcType=DECIMAL},
      memo = #{memo,jdbcType=VARCHAR},
      method = #{method,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      payer = #{payer,jdbcType=VARCHAR},
      payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      payment_method = #{paymentMethod,jdbcType=VARCHAR},
      payment_plugin_id = #{paymentPluginId,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      member = #{member,jdbcType=BIGINT},
      orders = #{orders,jdbcType=BIGINT},
      trade_no = #{tradeNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>